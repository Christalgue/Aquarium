package fr.aquarium.gui;

import fr.aquarium.Database;
import fr.aquarium.Extractor;
import java.lang.invoke.MethodHandles;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ExtractorFrame extends javax.swing.JFrame {
    private final static Logger logger = LoggerFactory.getLogger(MethodHandles.lookup().lookupClass());
    
    public final static String SETTINGS_FILENAME = "settings.json";
            
    private Settings settings;
    private Database database;
    private Extractor extractor;
    
    private JFileChooser jsonFileChooser;
    private JFileChooser csvFileChooser;
    
    /**
     * Creates new form MainFrame
     */
    public ExtractorFrame() {
        initComponents();
        loadSettings();
        jsonFileChooser = new JFileChooser();
        jsonFileChooser.setFileFilter(new FileNameExtensionFilter("Fichiers Javascript", "js"));
        csvFileChooser = new JFileChooser();
        csvFileChooser.setFileFilter(new FileNameExtensionFilter("Fichiers CSV", "csv"));
    }
    
    private void loadSettings() {
        try {
            settings = Settings.load(SETTINGS_FILENAME);
        } catch (Exception ex) {
            logger.error("Impossible de charger le fichier de configuration.", ex);
            settings = new Settings();
        }
        
        mysqlServer.setText(settings.mysqlServer);
        mysqlPort.setValue(settings.mysqlPort);
        mysqlDb.setText(settings.mysqlDb);
        mysqlUsername.setText(settings.mysqlUsername);
        mysqlPassword.setText(settings.mysqlPassword);
    }
    
    private void updateSettings() {
        settings.mysqlServer = mysqlServer.getText();
        settings.mysqlPort = (int) mysqlPort.getValue();
        settings.mysqlDb = mysqlDb.getText();
        settings.mysqlUsername = mysqlUsername.getText();
        settings.mysqlPassword = new String(mysqlPassword.getPassword());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTextField2 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        mysqlUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mysqlPassword = new javax.swing.JPasswordField();
        mysqlConnect = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 0), new java.awt.Dimension(20, 32767));
        jSeparator1 = new javax.swing.JSeparator();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 0));
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 0));
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        mysqlPort = new javax.swing.JSpinner();
        mysqlDb = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        mysqlServer = new javax.swing.JTextField();
        filler12 = new javax.swing.Box.Filler(new java.awt.Dimension(200, 0), new java.awt.Dimension(200, 0), new java.awt.Dimension(200, 32767));
        filler13 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        from = new javax.swing.JSpinner();
        jLabel27 = new javax.swing.JLabel();
        to = new javax.swing.JSpinner();
        json = new javax.swing.JButton();
        csv = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 20), new java.awt.Dimension(32767, 20));

        jTextField2.setText("jTextField1");

        jLabel9.setText("Identifiant : ");

        jPasswordField2.setText("jPasswordField1");

        jLabel10.setText("Mot de passe : ");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Extracteur de mesures");
        setPreferredSize(new java.awt.Dimension(640, 480));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Extracteur de mesures");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jScrollPane2.setBorder(null);

        jPanel1.setName(""); // NOI18N
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("Identifiant : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel2, gridBagConstraints);

        mysqlUsername.setMinimumSize(new java.awt.Dimension(4, 27));
        mysqlUsername.setPreferredSize(new java.awt.Dimension(4, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(mysqlUsername, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Mot de passe : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel3, gridBagConstraints);

        mysqlPassword.setMinimumSize(new java.awt.Dimension(4, 27));
        mysqlPassword.setPreferredSize(new java.awt.Dimension(4, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(mysqlPassword, gridBagConstraints);

        mysqlConnect.setText("Se connecter");
        mysqlConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mysqlConnectActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(mysqlConnect, gridBagConstraints);

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel4.setText("MySQL");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        jPanel1.add(filler2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel1.add(filler3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        jPanel1.add(filler4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        jPanel1.add(filler7, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel17.setText("Port :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel17, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel18.setText("BDD :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel18, gridBagConstraints);

        mysqlPort.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        mysqlPort.setModel(new javax.swing.SpinnerNumberModel(0, 0, 65535, 1));
        mysqlPort.setMinimumSize(new java.awt.Dimension(86, 27));
        mysqlPort.setPreferredSize(new java.awt.Dimension(31, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(mysqlPort, gridBagConstraints);

        mysqlDb.setMinimumSize(new java.awt.Dimension(4, 27));
        mysqlDb.setPreferredSize(new java.awt.Dimension(4, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(mysqlDb, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel19.setText("Serveur :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jLabel19, gridBagConstraints);

        mysqlServer.setMinimumSize(new java.awt.Dimension(4, 27));
        mysqlServer.setPreferredSize(new java.awt.Dimension(4, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(mysqlServer, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel1.add(filler12, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(filler13, gridBagConstraints);

        jLabel25.setText("Extraction");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel25, gridBagConstraints);

        jLabel26.setText("De");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel26, gridBagConstraints);

        from.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        from.setModel(new javax.swing.SpinnerDateModel());
        from.setMinimumSize(new java.awt.Dimension(104, 27));
        from.setPreferredSize(new java.awt.Dimension(106, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(from, gridBagConstraints);

        jLabel27.setText("À");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jLabel27, gridBagConstraints);

        to.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        to.setModel(new javax.swing.SpinnerDateModel());
        to.setMinimumSize(new java.awt.Dimension(104, 27));
        to.setPreferredSize(new java.awt.Dimension(104, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(to, gridBagConstraints);

        json.setText("JSON");
        json.setEnabled(false);
        json.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(json, gridBagConstraints);

        csv.setText("CSV");
        csv.setEnabled(false);
        csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csvActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(csv, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 6;
        jPanel1.add(filler1, gridBagConstraints);

        jScrollPane2.setViewportView(jPanel1);

        getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mysqlConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mysqlConnectActionPerformed
        updateSettings();
        
        mysqlConnect.setText("...");
        try {
            database = new Database(settings.mysqlServer,
                    settings.mysqlPort,
                    settings.mysqlDb,
                    settings.mysqlUsername,
                    settings.mysqlPassword);
            extractor = new Extractor(database, null, null, null);

            mysqlConnect.setText("Connecté");
            json.setEnabled(true);
            csv.setEnabled(true);
        } catch (SQLException ex) {
            logger.error("Impossible de se connecter au serveur MySQL", ex);
            JOptionPane.showMessageDialog(this,
                    "Impossible de se connecter au serveur MySQL spécifié !",
                    "Erreur de connexion",
                    JOptionPane.ERROR_MESSAGE);
            database = null;
            extractor = null;
            mysqlConnect.setText("Se connecter");
            json.setEnabled(false);
            csv.setEnabled(false);
        }
    }//GEN-LAST:event_mysqlConnectActionPerformed

    private static Calendar dateToCalendar(Date date) {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(date);
        return calendar;
    }
    
    private void jsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsonActionPerformed
        int ret = jsonFileChooser.showSaveDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            String file = jsonFileChooser.getSelectedFile().getPath();
            Calendar f = dateToCalendar((Date) from.getValue());
            Calendar t = dateToCalendar((Date) to.getValue());
            if(!file.endsWith(".js"))
                extractor.dumpToJSON(file+".js", t, f);
            else
                extractor.dumpToJSON(file, f, t);
        }
    }//GEN-LAST:event_jsonActionPerformed

    private void csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csvActionPerformed
        int ret = csvFileChooser.showSaveDialog(this);
        if (ret == JFileChooser.APPROVE_OPTION) {
            String file = csvFileChooser.getSelectedFile().getPath();
            Calendar f = dateToCalendar((Date) from.getValue());
            Calendar t = dateToCalendar((Date) to.getValue());
            if(!file.endsWith(".csv"))
                extractor.dumpToCSV(file+".csv", f, t);
            else
                extractor.dumpToCSV(file, f, t);
        }
    }//GEN-LAST:event_csvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ExtractorFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton csv;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler12;
    private javax.swing.Box.Filler filler13;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler7;
    private javax.swing.JSpinner from;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton json;
    private javax.swing.JButton mysqlConnect;
    private javax.swing.JTextField mysqlDb;
    private javax.swing.JPasswordField mysqlPassword;
    private javax.swing.JSpinner mysqlPort;
    private javax.swing.JTextField mysqlServer;
    private javax.swing.JTextField mysqlUsername;
    private javax.swing.JSpinner to;
    // End of variables declaration//GEN-END:variables
}
